{"version":3,"sources":["../../server/models/user.js"],"names":["model","sequelize","DataTypes","User","define","username","STRING","password","email","fullname","role","level","associate","models","hasMany","Inventory","foreignKey"],"mappings":";;;;;AAAA;;AAEA,IAAMA,QAAQ,SAARA,KAAQ,CAACC,SAAD,EAAYC,SAAZ,EAA0B;AACpC,QAAMC,OAAOF,UAAUG,MAAV,CAAiB,MAAjB,EAAyB;AAClCC,kBAAUH,UAAUI,MADc;AAElCC,kBAAUL,UAAUI,MAFc;AAGlCE,eAAON,UAAUI,MAHiB;AAIlCG,kBAAUP,UAAUI,MAJc;AAKlCI,cAAMR,UAAUI,MALkB;AAMlCK,eAAOT,UAAUI;AANiB,KAAzB,CAAb;;AASA;AACAH,SAAKS,SAAL,GAAiB,UAACC,MAAD,EAAY;AACzBV,aAAKW,OAAL,CAAaD,OAAOE,SAApB,EAA+B,EAAEC,YAAY,QAAd,EAA/B;AACH,KAFD;;AAIA,WAAOb,IAAP;AACH,CAhBD;;kBAkBeH,K","file":"user.js","sourcesContent":["/* eslint no-unused-vars: [\"error\", { \"args\": \"none\" }] */\n\nconst model = (sequelize, DataTypes) => {\n    const User = sequelize.define('User', {\n        username: DataTypes.STRING,\n        password: DataTypes.STRING,\n        email: DataTypes.STRING,\n        fullname: DataTypes.STRING,\n        role: DataTypes.STRING,\n        level: DataTypes.STRING\n    });\n\n    // Class Method\n    User.associate = (models) => {\n        User.hasMany(models.Inventory, { foreignKey: 'userId' });\n    };\n\n    return User;\n};\n\nexport default model;\n"]}